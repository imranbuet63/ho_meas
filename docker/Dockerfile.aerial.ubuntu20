#/*
# * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
# * contributor license agreements.  See the NOTICE file distributed with
# * this work for additional information regarding copyright ownership.
# * The OpenAirInterface Software Alliance licenses this file to You under
# * the OAI Public License, Version 1.1  (the "License"); you may not use this file
# * except in compliance with the License.
# * You may obtain a copy of the License at
# *
# *      http://www.openairinterface.org/?page_id=698
# *
# * Unless required by applicable law or agreed to in writing, software
# * distributed under the License is distributed on an "AS IS" BASIS,
# * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# * See the License for the specific language governing permissions and
# * limitations under the License.
# *-------------------------------------------------------------------------------
# * For more information about the OpenAirInterface (OAI) Software Alliance:
# *      contact@openairinterface.org
# */
#---------------------------------------------------------------------
#
# Dockerfile for the Open-Air-Interface BUILD service
#   Valid for Ubuntu 18.04
#
#---------------------------------------------------------------------


FROM ubuntu:focal AS ran-base
ARG NEEDED_GIT_PROXY
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Paris
ENV BUILD_UHD_FROM_SOURCE=True
ENV UHD_VERSION=3.15.0.0

#install developers pkg/repo
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes && \
    DEBIAN_FRONTEND=noninteractive apt-get install --yes \
       #gcc needed for build_oai
       build-essential \
       psmisc \
       git \
       xxd \
       wget \
       ninja-build \
       #unzip is needed for protobuf
       unzip \
       moreutils \
       vim-tiny \
       nano \
       # python3-pip for conf template generation
       python3-pip && \
    pip3 install --ignore-installed pyyaml

# In some network environments, GIT proxy is required
RUN /bin/bash -c "if [[ -v NEEDED_GIT_PROXY ]]; then git config --global http.proxy $NEEDED_GIT_PROXY; fi"

WORKDIR /

#copy OAI source
RUN mkdir oai-ran
COPY . oai-ran

#install DPDK
RUN wget https://fast.dpdk.org/rel/dpdk-21.08.tar.xz &&\
    tar xJf dpdk-21.08.tar.xz

# if ninja gives error "x cannot be used on thin files", replace the following python script with this content
RUN cp oai-ran/docker/scripts/gen-pmdinfo-cfile.py dpdk-21.08/buildtools/.

RUN pip3 install meson pyelftools

WORKDIR /dpdk-21.08

RUN mkdir build &&\
    meson build &&\
    cd build &&\
    ninja  &&\
    ninja install &&\
    ldconfig


#run build_oai -I to get the builder image
WORKDIR /oai-ran

RUN /bin/sh oaienv && \ 
    cd cmake_targets && \
    mkdir -p log && \
    ./build_oai -I -w None --gNB --ninja 

ENTRYPOINT ["/oai-ran/docker/scripts/gnb_entrypoint.sh"]
CMD ["/oai-ran/cmake_targets/ran_build/build/nr-softmodem", "-O", "/opt/oai-gnb/etc/gnb.conf"]
